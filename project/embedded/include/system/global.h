#pragma once
/**********************************************************************************************************************/
/* Description: Global definitions for entire project                                                                 */
/**********************************************************************************************************************/

/**********************************************************************************************************************/
/* Includes                                                                                                           */
/**********************************************************************************************************************/

/* C Standards */
#include <assert.h>

/* Project dependencies */
#include <cmsis_compiler.h>
#include <em_device.h>

/* External dependencies */

/**********************************************************************************************************************/
/* Macros                                                                                                             */
/**********************************************************************************************************************/

/**********************************************************************************************************************/
/* Typedefs                                                                                                           */
/**********************************************************************************************************************/

/* Enums */

/* Forward declarations */

/* Structs */

/* Unions */

/**********************************************************************************************************************/
/* Functions declaration                                                                                              */
/**********************************************************************************************************************/
__STATIC_INLINE void reset_system(void)
{
    NVIC_SystemReset;
}